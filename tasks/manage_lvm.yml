---

- name: LVOL | Creating new LVM logical volume(s)
  lvol:
    vg: "{{ item.0.vgname }}"
    lv: "{{ item.1.lvname }}"
    size: "{{ item.1.size }}"
    state: present
  register: lvm
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.state|default("present") == "present") and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.state|default("mounted") == "mounted" or item.1.state|default("mounted") == "inactive" )

- name: FILESYSTEM | Creating new filesystem on new LVM logical volume(s)
  filesystem:
    fstype: "{{ item.1.filesystem }}"
    dev: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
#    resizefs: yes  #coming in 2.0 which will replace the resizing filesystem task below
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.state|default("present") == "present") and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.state|default("mounted") == "mounted" or item.1.state|default("mounted") == "inactive" )

- name: COMMAND | Resizing filesystem
  command: resize2fs /dev/{{ item.0.vgname }}/{{ item.1.lvname }}
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when:
    - lvm.changed and item.1.filesystem != "swap"
    - item.1.filesystem != "xfs"
    - item.1.state|default("mounted") == "mounted"

- name: COMMAND | Resizing xfs filesystem
  command: xfs_growfs /dev/{{ item.0.vgname }}/{{ item.1.lvname }}
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: lvm.changed and item.1.filesystem == "xfs"

- name: SHELL | Resizing swap
  shell: "swapoff -a && mkswap /dev/{{ item.0.vgname }}/{{ item.1.lvname }} && swapon -va"
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: lvm.changed and item.1.filesystem == "swap"

- name: MOUNT | Mounting new filesystem(s)
  mount:
    name: "{{ item.1.mount_point }}"
    src: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
    fstype: "{{ item.1.filesystem }}"
    state: mounted
    opts: "{{ item.1.mount_options | default('defaults') }}"
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.state|default("present") == "present") and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.state|default("mounted") == "mounted")

- name: MOUNT | Unmounting filesystem(s)
  mount:
    name: "{{ item.1.mount_point }}"
    src: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
    fstype: "{{ item.1.filesystem }}"
    state: absent
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.state|default("present") == "present") and
    (item.1 is defined and item.1 != 'None') and
    (item.1.state|default("mounted") == "inactive" or item.1.state|default("mounted") == "absent" )

- name: LVOL | Deactivate LVM logical volume(s)
  lvol:
    vg: "{{ item.0.vgname }}"
    lv: "{{ item.1.lvname }}"
    state: present
    active: no
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.state|default("present") == "present") and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.state|default("mounted") == "inactive")

- name: LVOL | Removing LVM logical volume(s)
  lvol:
    vg: "{{ item.0.vgname }}"
    lv: "{{ item.1.lvname }}"
    state: absent
    force: yes
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.state|default("present") == "present") and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.state|default("mounted") == "absent")
